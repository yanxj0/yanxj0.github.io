function y(u){return u}function b(u){if(u==null)return y;var i,o,f=u.scale[0],s=u.scale[1],l=u.translate[0],d=u.translate[1];return function(p,c){c||(i=o=0);var t=2,e=p.length,r=new Array(e);for(r[0]=(i+=p[0])*f+l,r[1]=(o+=p[1])*s+d;t<e;)r[t]=p[t],++t;return r}}function P(u,i){for(var o,f=u.length,s=f-i;s<--f;)o=u[s],u[s++]=u[f],u[f]=o}function g(u,i){var o=b(u.transform),f=u.arcs;function s(e,r){r.length&&r.pop();for(var a=f[e<0?~e:e],n=0,h=a.length;n<h;++n)r.push(o(a[n],n));e<0&&P(r,h)}function l(e){return o(e)}function d(e){for(var r=[],a=0,n=e.length;a<n;++a)s(e[a],r);return r.length<2&&r.push(r[0]),r}function p(e){for(var r=d(e);r.length<4;)r.push(r[0]);return r}function c(e){return e.map(p)}function t(e){var r=e.type,a;switch(r){case"GeometryCollection":return{type:r,geometries:e.geometries.map(t)};case"Point":a=l(e.coordinates);break;case"MultiPoint":a=e.coordinates.map(l);break;case"LineString":a=d(e.arcs);break;case"MultiLineString":a=e.arcs.map(d);break;case"Polygon":a=c(e.arcs);break;case"MultiPolygon":a=e.arcs.map(c);break;default:return null}return{type:r,coordinates:a}}return t(i)}function w(u,i){var o={},f={},s={},l=[],d=-1;i.forEach(function(t,e){var r=u.arcs[t<0?~t:t],a;r.length<3&&!r[1][0]&&!r[1][1]&&(a=i[++d],i[d]=t,i[e]=a)}),i.forEach(function(t){var e=p(t),r=e[0],a=e[1],n,h;if(n=s[r])if(delete s[n.end],n.push(t),n.end=a,h=f[a]){delete f[h.start];var v=h===n?n:n.concat(h);f[v.start=n.start]=s[v.end=h.end]=v}else f[n.start]=s[n.end]=n;else if(n=f[a])if(delete f[n.start],n.unshift(t),n.start=r,h=s[r]){delete s[h.end];var m=h===n?n:h.concat(n);f[m.start=h.start]=s[m.end=n.end]=m}else f[n.start]=s[n.end]=n;else n=[t],f[n.start=r]=s[n.end=a]=n});function p(t){var e=u.arcs[t<0?~t:t],r=e[0],a;return u.transform?(a=[0,0],e.forEach(function(n){a[0]+=n[0],a[1]+=n[1]})):a=e[e.length-1],t<0?[a,r]:[r,a]}function c(t,e){for(var r in t){var a=t[r];delete e[a.start],delete a.start,delete a.end,a.forEach(function(n){o[n<0?~n:n]=1}),l.push(a)}}return c(s,f),c(f,s),i.forEach(function(t){o[t<0?~t:t]||l.push([t])}),l}function k(u){for(var i=-1,o=u.length,f,s=u[o-1],l=0;++i<o;)f=s,s=u[i],l+=f[0]*s[1]-f[1]*s[0];return Math.abs(l)}function M(u){return g(u,x.apply(this,arguments))}function x(u,i){var o={},f=[],s=[];i.forEach(l);function l(c){switch(c.type){case"GeometryCollection":c.geometries.forEach(l);break;case"Polygon":d(c.arcs);break;case"MultiPolygon":c.arcs.forEach(d);break}}function d(c){c.forEach(function(t){t.forEach(function(e){(o[e=e<0?~e:e]||(o[e]=[])).push(c)})}),f.push(c)}function p(c){return k(g(u,{type:"Polygon",arcs:[c]}).coordinates[0])}return f.forEach(function(c){if(!c._){var t=[],e=[c];for(c._=1,s.push(t);c=e.pop();)t.push(c),c.forEach(function(r){r.forEach(function(a){o[a<0?~a:a].forEach(function(n){n._||(n._=1,e.push(n))})})})}}),f.forEach(function(c){delete c._}),{type:"MultiPolygon",arcs:s.map(function(c){var t=[],e;if(c.forEach(function(v){v.forEach(function(m){m.forEach(function(E){o[E<0?~E:E].length<2&&t.push(E)})})}),t=w(u,t),(e=t.length)>1)for(var r=1,a=p(t[0]),n,h;r<e;++r)(n=p(t[r]))>a&&(h=t[0],t[0]=t[r],t[r]=h,a=n);return t}).filter(function(c){return c.length>0})}}export{M as m};
